- name: Core playbook
  hosts: "*"
  become: yes

  environment:
    PATH: "{{ ansible_env.PATH }}:/home/{{ username }}/.cargo/bin"

  # ----- ----- ----- ----- -----
  # Bootstrap tasks
  # ----- ----- ----- ----- -----

  # Anything with an earlier dependency should go here
  pre_tasks:
    - name: Pre tasks
      include_tasks: "{{ task_items }}"
      with_fileglob:
        # Required before we can do git actions in dotfiles
        - "tasks/core/setup_ssh.yaml"
      loop_control:
        loop_var: task_items

  # ----- ----- ----- ----- -----
  # Task imports
  # ----- ----- ----- ----- -----

  tasks:

    # ----- ----- ----- ----- -----

    - name: Core tasks
      include_tasks: "{{ task_items }}"
      with_fileglob:
        - "tasks/core/**.yaml"
      loop_control:
        loop_var: task_items

    # ----- ----- ----- ----- -----
    # WORKSTATION
    # ----- ----- ----- ----- -----

    - name: Workstation tasks
      include_tasks: "{{ task_items }}"
      when: inventory_hostname in groups.workstation
      with_fileglob:
        - "tasks/workstation/**.yaml"
      loop_control:
        loop_var: task_items

    - name: Workstation role - Obsidian sync
      include_role:
        name: gdrive_obsidian
      when: inventory_hostname in groups.workstation
      vars:
        gdrive_client_id: "{{ secret_gdrive_client_id }}"
        gdrive_client_secret: "{{ secret_gdrive_client_secret }}"
        gdrive_root_folder_id: "{{ secret_gdrive_root_folder_id }}"

    - name: Workstation role - VSCode
      include_role:
        name: vscode
      when: inventory_hostname in groups.workstation

    # ----- ----- ----- ----- -----
    # SERVER
    # ----- ----- ----- ----- -----

    - name: Server tasks
      include_tasks: "{{ task_items }}"
      when: inventory_hostname in groups.server
      with_fileglob:
        - "tasks/server/**.yaml"
      loop_control:
        loop_var: task_items

    # ----- ----- ----- ----- -----
    # MEDIA
    # ----- ----- ----- ----- -----

    - name: Media tasks
      include_tasks: "{{ task_items }}"
      when: inventory_hostname in groups.media
      with_fileglob:
        - "tasks/media/**.yaml"
      loop_control:
        loop_var: task_items

    # ----- ----- ----- ----- -----
    # MINECRAFT
    # ----- ----- ----- ----- -----

    - name: Minecraft role
      include_role:
        name: tquin.minecraft_fabric_server
      when: inventory_hostname in groups.minecraft
      vars:
        mcrcon_pass: "{{ secret_mcrcon_pass }}"
        minecraft_ops: "{{ secret_minecraft_ops }}"
        minecraft_allowlist: "{{ secret_minecraft_allowlist }}"

    # ----- ----- ----- ----- -----
    # BACKUP
    # ----- ----- ----- ----- -----

    - name: Backup role
      include_role:
        name: rclone_backup
      when: 
        - inventory_hostname in groups.backup
        ##### ##### ##### ##### #####
        # Temporarily disabling due to:
        # https://github.com/tigattack/ansible-rclone-rc-remotes/issues/1
        - false 
        ##### ##### ##### ##### #####
      vars:
        # HTTP server
        rclone_rc_pass: "{{ secret_rclone_rc_pass }}"
        # Google Photos
        rclone_gphotos_token: "{{ secret_rclone_gphotos_token }}"
        # Azure blob
        rclone_azure_account: "{{ secret_rclone_azure_account }}"
        rclone_azure_key: "{{ secret_rclone_azure_key }}"
        rclone_azure_crypt_pass: "{{ secret_rclone_azure_crypt_pass }}"

    # ----- ----- ----- ----- -----
    # WIP TEST
    # ----- ----- ----- ----- -----

    - name: Test role - fs_snapshots
      include_role:
        name: fs_snapshots
      when: inventory_hostname in groups.test
